package co.com.accenture.model;

import java.math.BigDecimal;
import java.util.Map;

import javax.validation.Valid;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedTimestamp;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;

@DynamoDBTable(tableName = "Movimientos")
public class Movimientos {

	@DynamoDBHashKey(attributeName = "IdMovimiento")
	@DynamoDBAutoGeneratedKey
	private String id;

	@DynamoDBAttribute(attributeName = "Producto")
	//@Valid
	@NotEmpty(message= "Este campo es obligatorio")
	//@Min(1000)
	//@Size(min=4,message="El movimiento debe ser mayor de 1000")
	private String producto;

	@DynamoDBAttribute(attributeName = "ValorTransaccion")
	private BigDecimal valor;

	@DynamoDBAttribute(attributeName = "TipoId")
	private String tipoId;

	@DynamoDBAttribute(attributeName = "IdCliente")
	private String idCliente;

	@DynamoDBAutoGeneratedTimestamp
	@DynamoDBTypeConvertedTimestamp(pattern = "yyyy-MM-dd//HH:mm:ss.SSS", timeZone = "GMT-5")
	@DynamoDBAttribute(attributeName = "FechaYhora")
	private String fechaYhora;

	@DynamoDBAutoGeneratedTimestamp
	@DynamoDBTypeConvertedTimestamp(pattern = "yyyy-MM-dd", timeZone = "GMT-5")
	@DynamoDBAttribute(attributeName = "Fecha")
	private String fecha;

	public Movimientos(Map<String, AttributeValue> item) {
		this.id = item.get("IdMovimiento") == null ? null : item.get("IdMovimiento").getS();
		this.producto = item.get("Producto") == null ? null : item.get("Producto").getS();
		if (item.get("ValorTransaccion") == null)
			this.valor = null;
		else
			this.valor = new BigDecimal(item.get("ValorTransaccion").getS());
		this.tipoId = item.get("TipoId") == null ? null : item.get("TipoId").getS();
		this.idCliente = item.get("IdCliente") == null ? null : item.get("IdCliente").getS();
		this.fechaYhora = item.get("FechaYhora") == null ? null : item.get("FechaYhora").getS();
		this.fecha = item.get("Fecha") == null ? null : item.get("Fecha").getS();

	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getFechaYhora() {
		return fechaYhora;
	}

	public void setFechaYhora(String fechaYhora) {
		this.fechaYhora = fechaYhora;
	}

	public String getProducto() {
		return producto;
	}

	public void setProducto(String producto) {
		this.producto = producto;
	}

	public BigDecimal getValor() {
		return valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	public String getTipoId() {
		return tipoId;
	}

	public void setTipoId(String tipoId) {
		this.tipoId = tipoId;
	}

	public String getIdCliente() {
		return idCliente;
	}

	public void setIdCliente(String idCliente) {
		this.idCliente = idCliente;
	}

	public String getFecha() {
		return fecha;
	}

	public void setFecha(String fecha) {
		this.fecha = fecha;
	}

	public Movimientos() {
		super();
	}

}
